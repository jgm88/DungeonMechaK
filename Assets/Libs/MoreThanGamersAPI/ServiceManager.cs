//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.18444
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Net;
using UnityEngine;
using System.IO;

namespace MoreThanGamers
{
	public class ServiceManager 
	{



		/**
		 */

		private List<MTGService> servicesList;
		private bool coRutineStarted;
		private MTGApi api;

		public delegate void ServiceManagerDelegate();
		public ServiceManagerDelegate maxCallsError;

		public ServiceManager (MTGApi api)
		{
			servicesList = new List<MTGService>();
			coRutineStarted = false;
			this.api = api;
		}



		public void removeFunction(MTGService service)
		{
			servicesList.Remove(service);
		}
		public void addFunction(MTGService service)
		{
			api.debugLogMessage("New service added to stacks: "+service.ToString());
			servicesList.Add(service);
			activateManager();
		}
		public void activateManager()
		{
			if(coRutineStarted == false)
			{
				 api.StartCoroutine(ServiceCaller());
			}
		}
		
		private IEnumerator ServiceCaller()
		{
		
			coRutineStarted = true;

			while(servicesList.Count > 0)
			{
				MTGService service =  servicesList[0];
			
				yield return api.StartCoroutine(service.exectureService());

				if(service.isError)
				{
					service.calls_error++;

					if(service.errorListener != null)
						service.errorListener(service);
					if(service.maximCallTries)
					{
						api.debugLogMessage(service.getStatus+" : All calls try");

						service.calls_error = 0;
						if(service.DeprecateAfterMaxCalls)
							servicesList.RemoveAt(0);
						else 
							maxCallsError();

						break;
					}	//Happen graphic mistake
				}
				else
				{
					api.debugLogMessage(service.ToString()+" Called Success :) ");
					if(service.endCorrectListener != null)
						service.endCorrectListener(service);
					service.calls_error = 0;
					servicesList.RemoveAt(0);
				}
				yield return new WaitForSeconds(1f);
			}
			coRutineStarted = false;
		}


	}
}


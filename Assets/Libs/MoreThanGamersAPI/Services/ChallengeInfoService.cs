//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.18444
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using UnityEngine;
using System.Net;
using System.Collections;
using System.Collections.Generic;
namespace MoreThanGamers
{
	public class ChallengeInfoService : MTGService
	{

		private int socketId;
		private string password;
		public MTGChallenge challenge;
		public Boolean socketHasChallenge; //False when is not loaded;

		public ChallengeInfoService (MTGApi api, int socketId,string password) :base(api,"challenge")
		{
			this.socketId = socketId;
			challenge = null;
			socketHasChallenge = false;
			this.password  = password;
		}

		protected sealed override IEnumerator callService ()
		{
			TokenService tokenService = new TokenService(api,socketId,password);
			yield return api.StartCoroutine(tokenService.exectureService());


			if(tokenService.isError)
			{

				setError(tokenService.getStatus,tokenService.getErrorMessage);
				yield break;
			}

			Hashtable table = new Hashtable();


			table.Add("gameId",api.GameId);
			table.Add("socketId",socketId);
			table.Add("token",tokenService.Token);

			//debugText.text += "Llamada al reto \n";
			WWW w = new WWW(this.connectionUrl+MTGService.HastableToUrlGetParametter(table));

			
			yield return w; yield return new WaitForSeconds(1f);

			if (!String.IsNullOrEmpty(w.error))
			{
				this.setError(MTGService.EXTERNAL_ERROR,w.error);
				if(w.text != null)
					this.setError(MTGService.EXTERNAL_ERROR,w.text.Trim());
				yield break;
			}
			//print("Received info challenge\n"); debugText.text += "Erro3r [ "+ w4.error+"]\n";

			JSONObject j = new JSONObject(w.text.Trim());
			if(!this.checkstatus(j))
				yield break;


			JSONObject jChallenge = j.GetField("challenge");
			socketHasChallenge =! (jChallenge.ToString() == "\"NULL\"");
			if(socketHasChallenge)
				challenge = new MTGChallenge(api,jChallenge);


		}



	}


}

